---
- name: Checking installed version of node.js
  shell: /usr/bin/test `node -v` = v{{ node.version }} && echo True
  register: node
  ignore_errors: yes

- name: Checking installed version of NPM
  shell: /usr/bin/test `npm -v` = {{ npm.version }} && echo True
  register: npm
  ignore_errors: yes

- name: Fetching node.js source
  get_url: url="http://nodejs.org/dist/v{{ node.version }}/node-v{{ node.version }}.tar.gz" dest=/tmp/
  when: node|failed

- name: Unpack node.js tarball
  unarchive: src=/tmp/node-v{{ node.version }}.tar.gz dest=/tmp/
  when: node|failed

- name: Take Ownership of Node Folder
  file: path=/tmp/node-v{{ node.version }} owner={{ app.user }} group={{ app.group }}
  sudo: yes
  when: node|failed

- name: Configure
  shell: ./configure chdir=/tmp/node-v{{ node.version }}
  sudo: yes
  when: node|failed

- name: Make
  shell: chdir=/tmp/node-v{{ node.version }} /usr/bin/make
  sudo: yes
  when: node|failed

- name: Make install
  shell: /usr/bin/make install chdir=/tmp/node-v{{ node.version }}/
  sudo: yes
  when: node|failed

- name: Update npm
  shell: npm install npm@{{ npm.version }} -g
  sudo: yes
  when: npm|failed

- name: Clear npm config
  shell: npm config set ca ""
  sudo: yes
  when: npm|failed

- name: Clear npm config
  shell: npm config set ca ""
  when: npm|failed

- name: Clear npm cache
  shell: npm cache clear
  sudo: yes
  when: npm|failed

- name: Clear npm cache
  shell: npm cache clear
  when: npm|failed

- name: Install Grunt CLI
  npm: name=grunt-cli global=yes state=present
  sudo: yes

- name: Install Bower
  npm: name=bower global=yes state=present
  sudo: yes